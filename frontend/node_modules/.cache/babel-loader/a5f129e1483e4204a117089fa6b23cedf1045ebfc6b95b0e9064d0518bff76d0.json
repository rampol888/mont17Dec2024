{"ast":null,"code":"var _jsxFileName = \"/Users/pradeepn/monitoringservice/aws-monitor/frontend/src/Components/APMDashboard.jsx\";\nimport React from 'react';\nimport { Card, CardContent, Typography, Grid, Box } from '@mui/material';\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend } from 'chart.js';\nimport { Line } from 'react-chartjs-2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend);\nconst APMDashboard = ({\n  metrics\n}) => {\n  var _metrics$responseTime, _metrics$responseTime2, _metrics$errorRates, _metrics$errorRates2;\n  const chartIds = {\n    responseTime: 'response-time-chart',\n    errorRate: 'error-rate-chart'\n  };\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: /*#__PURE__*/_jsxDEV(CardContent, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        gutterBottom: true,\n        children: \"Application Performance\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 3,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 6,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            children: /*#__PURE__*/_jsxDEV(CardContent, {\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"subtitle1\",\n                children: \"Response Time\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 39,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                height: 300,\n                children: /*#__PURE__*/_jsxDEV(Line, {\n                  id: chartIds.responseTime,\n                  options: {\n                    responsive: true,\n                    maintainAspectRatio: false\n                  },\n                  data: {\n                    labels: (metrics === null || metrics === void 0 ? void 0 : (_metrics$responseTime = metrics.responseTimes) === null || _metrics$responseTime === void 0 ? void 0 : _metrics$responseTime.map(m => m.timestamp)) || [],\n                    datasets: [{\n                      label: 'Avg Response Time (ms)',\n                      data: (metrics === null || metrics === void 0 ? void 0 : (_metrics$responseTime2 = metrics.responseTimes) === null || _metrics$responseTime2 === void 0 ? void 0 : _metrics$responseTime2.map(m => m.value)) || [],\n                      borderColor: 'rgb(75, 192, 192)'\n                    }]\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 41,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 40,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 6,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            children: /*#__PURE__*/_jsxDEV(CardContent, {\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"subtitle1\",\n                children: \"Error Rate\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                height: 300,\n                children: /*#__PURE__*/_jsxDEV(Line, {\n                  id: chartIds.errorRate,\n                  options: {\n                    responsive: true,\n                    maintainAspectRatio: false\n                  },\n                  data: {\n                    labels: (metrics === null || metrics === void 0 ? void 0 : (_metrics$errorRates = metrics.errorRates) === null || _metrics$errorRates === void 0 ? void 0 : _metrics$errorRates.map(m => m.timestamp)) || [],\n                    datasets: [{\n                      label: 'Error Rate (%)',\n                      data: (metrics === null || metrics === void 0 ? void 0 : (_metrics$errorRates2 = metrics.errorRates) === null || _metrics$errorRates2 === void 0 ? void 0 : _metrics$errorRates2.map(m => m.value)) || [],\n                      borderColor: 'rgb(255, 99, 132)'\n                    }]\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 65,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n};\n_c = APMDashboard;\nexport default APMDashboard;\nvar _c;\n$RefreshReg$(_c, \"APMDashboard\");","map":{"version":3,"names":["React","Card","CardContent","Typography","Grid","Box","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","Line","jsxDEV","_jsxDEV","register","APMDashboard","metrics","_metrics$responseTime","_metrics$responseTime2","_metrics$errorRates","_metrics$errorRates2","chartIds","responseTime","errorRate","children","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","container","spacing","item","xs","md","height","id","options","responsive","maintainAspectRatio","data","labels","responseTimes","map","m","timestamp","datasets","label","value","borderColor","errorRates","_c","$RefreshReg$"],"sources":["/Users/pradeepn/monitoringservice/aws-monitor/frontend/src/Components/APMDashboard.jsx"],"sourcesContent":["import React from 'react';\nimport { Card, CardContent, Typography, Grid, Box } from '@mui/material';\nimport {\n    Chart as ChartJS,\n    CategoryScale,\n    LinearScale,\n    PointElement,\n    LineElement,\n    Title,\n    Tooltip,\n    Legend\n} from 'chart.js';\nimport { Line } from 'react-chartjs-2';\n\nChartJS.register(\n    CategoryScale,\n    LinearScale,\n    PointElement,\n    LineElement,\n    Title,\n    Tooltip,\n    Legend\n);\n\nconst APMDashboard = ({ metrics }) => {\n    const chartIds = {\n        responseTime: 'response-time-chart',\n        errorRate: 'error-rate-chart'\n    };\n\n    return (\n        <Card>\n            <CardContent>\n                <Typography variant=\"h6\" gutterBottom>Application Performance</Typography>\n                <Grid container spacing={3}>\n                    <Grid item xs={12} md={6}>\n                        <Card>\n                            <CardContent>\n                                <Typography variant=\"subtitle1\">Response Time</Typography>\n                                <Box height={300}>\n                                    <Line\n                                        id={chartIds.responseTime}\n                                        options={{\n                                            responsive: true,\n                                            maintainAspectRatio: false\n                                        }}\n                                        data={{\n                                            labels: metrics?.responseTimes?.map(m => m.timestamp) || [],\n                                            datasets: [{\n                                                label: 'Avg Response Time (ms)',\n                                                data: metrics?.responseTimes?.map(m => m.value) || [],\n                                                borderColor: 'rgb(75, 192, 192)',\n                                            }]\n                                        }}\n                                    />\n                                </Box>\n                            </CardContent>\n                        </Card>\n                    </Grid>\n                    <Grid item xs={12} md={6}>\n                        <Card>\n                            <CardContent>\n                                <Typography variant=\"subtitle1\">Error Rate</Typography>\n                                <Box height={300}>\n                                    <Line\n                                        id={chartIds.errorRate}\n                                        options={{\n                                            responsive: true,\n                                            maintainAspectRatio: false\n                                        }}\n                                        data={{\n                                            labels: metrics?.errorRates?.map(m => m.timestamp) || [],\n                                            datasets: [{\n                                                label: 'Error Rate (%)',\n                                                data: metrics?.errorRates?.map(m => m.value) || [],\n                                                borderColor: 'rgb(255, 99, 132)',\n                                            }]\n                                        }}\n                                    />\n                                </Box>\n                            </CardContent>\n                        </Card>\n                    </Grid>\n                </Grid>\n            </CardContent>\n        </Card>\n    );\n};\n\nexport default APMDashboard; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
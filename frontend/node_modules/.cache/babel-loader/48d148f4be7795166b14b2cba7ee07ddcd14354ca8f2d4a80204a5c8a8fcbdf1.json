{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nexport const fetchDetailedMonitoring = createAsyncThunk('awsServices/fetchDetailedMonitoring', async () => {\n  const response = await fetch('http://localhost:5001/api/monitoring/detailed');\n  if (!response.ok) {\n    throw new Error('Failed to fetch monitoring data');\n  }\n  return response.json();\n});\nconst initialState = {\n  detailedData: null,\n  status: 'idle',\n  error: null\n};\nconst awsServicesSlice = createSlice({\n  name: 'awsServices',\n  initialState,\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(fetchDetailedMonitoring.pending, state => {\n      state.status = 'loading';\n    }).addCase(fetchDetailedMonitoring.fulfilled, (state, action) => {\n      state.status = 'succeeded';\n      state.detailedData = action.payload;\n    }).addCase(fetchDetailedMonitoring.rejected, (state, action) => {\n      state.status = 'failed';\n      state.error = action.error.message;\n    });\n  }\n});\nexport default awsServicesSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","fetchDetailedMonitoring","response","fetch","ok","Error","json","initialState","detailedData","status","error","awsServicesSlice","name","reducers","extraReducers","builder","addCase","pending","state","fulfilled","action","payload","rejected","message","reducer"],"sources":["/Users/pradeepn/monitoringservice/aws-monitor/frontend/src/features/awsServices/awsServicesSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\n\nexport const fetchDetailedMonitoring = createAsyncThunk(\n  'awsServices/fetchDetailedMonitoring',\n  async () => {\n    const response = await fetch('http://localhost:5001/api/monitoring/detailed');\n    if (!response.ok) {\n      throw new Error('Failed to fetch monitoring data');\n    }\n    return response.json();\n  }\n);\n\nconst initialState = {\n  detailedData: null,\n  status: 'idle',\n  error: null\n};\n\nconst awsServicesSlice = createSlice({\n  name: 'awsServices',\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder\n      .addCase(fetchDetailedMonitoring.pending, (state) => {\n        state.status = 'loading';\n      })\n      .addCase(fetchDetailedMonitoring.fulfilled, (state, action) => {\n        state.status = 'succeeded';\n        state.detailedData = action.payload;\n      })\n      .addCase(fetchDetailedMonitoring.rejected, (state, action) => {\n        state.status = 'failed';\n        state.error = action.error.message;\n      });\n  },\n});\n\nexport default awsServicesSlice.reducer;"],"mappings":"AAAA,SAASA,WAAW,EAAEC,gBAAgB,QAAQ,kBAAkB;AAEhE,OAAO,MAAMC,uBAAuB,GAAGD,gBAAgB,CACrD,qCAAqC,EACrC,YAAY;EACV,MAAME,QAAQ,GAAG,MAAMC,KAAK,CAAC,+CAA+C,CAAC;EAC7E,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;IAChB,MAAM,IAAIC,KAAK,CAAC,iCAAiC,CAAC;EACpD;EACA,OAAOH,QAAQ,CAACI,IAAI,CAAC,CAAC;AACxB,CACF,CAAC;AAED,MAAMC,YAAY,GAAG;EACnBC,YAAY,EAAE,IAAI;EAClBC,MAAM,EAAE,MAAM;EACdC,KAAK,EAAE;AACT,CAAC;AAED,MAAMC,gBAAgB,GAAGZ,WAAW,CAAC;EACnCa,IAAI,EAAE,aAAa;EACnBL,YAAY;EACZM,QAAQ,EAAE,CAAC,CAAC;EACZC,aAAa,EAAGC,OAAO,IAAK;IAC1BA,OAAO,CACJC,OAAO,CAACf,uBAAuB,CAACgB,OAAO,EAAGC,KAAK,IAAK;MACnDA,KAAK,CAACT,MAAM,GAAG,SAAS;IAC1B,CAAC,CAAC,CACDO,OAAO,CAACf,uBAAuB,CAACkB,SAAS,EAAE,CAACD,KAAK,EAAEE,MAAM,KAAK;MAC7DF,KAAK,CAACT,MAAM,GAAG,WAAW;MAC1BS,KAAK,CAACV,YAAY,GAAGY,MAAM,CAACC,OAAO;IACrC,CAAC,CAAC,CACDL,OAAO,CAACf,uBAAuB,CAACqB,QAAQ,EAAE,CAACJ,KAAK,EAAEE,MAAM,KAAK;MAC5DF,KAAK,CAACT,MAAM,GAAG,QAAQ;MACvBS,KAAK,CAACR,KAAK,GAAGU,MAAM,CAACV,KAAK,CAACa,OAAO;IACpC,CAAC,CAAC;EACN;AACF,CAAC,CAAC;AAEF,eAAeZ,gBAAgB,CAACa,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
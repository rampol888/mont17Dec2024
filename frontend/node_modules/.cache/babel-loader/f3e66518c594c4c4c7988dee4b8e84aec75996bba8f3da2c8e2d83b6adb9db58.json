{"ast":null,"code":"var _jsxFileName = \"/Users/pradeepn/monitoringservice/aws-monitor/frontend/src/Components/Dashboard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Grid, Container, Typography, Box, Card, CardContent, useTheme, alpha, CircularProgress, Alert, Paper, Avatar } from '@mui/material';\nimport { styled } from '@mui/material/styles';\nimport { Line } from 'react-chartjs-2';\n\n// Material Icons\nimport DashboardIcon from '@mui/icons-material/Dashboard';\nimport StorageIcon from '@mui/icons-material/Storage';\nimport SpeedIcon from '@mui/icons-material/Speed';\nimport WebIcon from '@mui/icons-material/Web';\nimport ComputerIcon from '@mui/icons-material/Computer';\nimport WarningIcon from '@mui/icons-material/Warning';\nimport ListAltIcon from '@mui/icons-material/ListAlt';\nimport TimelineIcon from '@mui/icons-material/Timeline';\nimport HomeIcon from '@mui/icons-material/Home';\nimport AdminPanelSettingsIcon from '@mui/icons-material/AdminPanelSettings';\nimport MonitorIcon from '@mui/icons-material/Monitor';\nimport AssessmentIcon from '@mui/icons-material/Assessment';\n\n// Chart.js registration\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend, Filler } from 'chart.js';\n\n// Register ChartJS components\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend, Filler);\n\n// Import your components\nimport WebsiteMonitoring from './WebsiteMonitoring';\nimport LogManagement from './LogManagement';\nimport APMDashboard from './APMDashboard';\nimport RUMDashboard from './RUMDashboard';\nimport DatabaseMetrics from './DatabaseMetrics';\nimport DiskSpaceMetrics from './DiskSpaceMetrics';\nimport NetworkMonitoring from './NetworkMonitoring';\nimport WebsitePerformance from './WebsitePerformance';\nimport WebpageSpeedTest from './WebpageSpeedTest';\nimport ServerMonitoring from './ServerMonitoring';\nimport ResponseTimeMonitoring from './ResponseTimeMonitoring';\n\n// Import the actions from your slice\nimport { fetchAWSStatus, fetchAllMetrics } from '../features/awsServices/awsServicesSlice';\n\n// Styled components remain the same\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StyledCard = styled(Card)(({\n  theme\n}) => ({\n  height: '100%',\n  background: alpha(theme.palette.background.paper, 0.9),\n  backdropFilter: 'blur(8px)',\n  borderRadius: theme.spacing(2),\n  transition: 'all 0.3s ease-in-out',\n  '&:hover': {\n    transform: 'translateY(-4px)',\n    boxShadow: theme.shadows[8]\n  }\n}));\nconst MetricBox = styled(Box)(({\n  theme\n}) => ({\n  padding: theme.spacing(2),\n  borderRadius: theme.spacing(2),\n  background: alpha(theme.palette.background.paper, 0.8),\n  backdropFilter: 'blur(8px)',\n  display: 'flex',\n  alignItems: 'center',\n  gap: theme.spacing(2)\n}));\nconst menuItems = [{\n  title: 'Home',\n  icon: /*#__PURE__*/_jsxDEV(HomeIcon, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 28\n  }, this),\n  path: '/'\n}, {\n  title: 'Admin',\n  icon: /*#__PURE__*/_jsxDEV(AdminPanelSettingsIcon, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 29\n  }, this),\n  path: '/admin'\n}, {\n  title: 'Monitoring',\n  icon: /*#__PURE__*/_jsxDEV(MonitorIcon, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 34\n  }, this),\n  path: '/monitoring'\n}, {\n  title: 'Server',\n  icon: /*#__PURE__*/_jsxDEV(StorageIcon, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 30\n  }, this),\n  path: '/server'\n}, {\n  title: 'Reports',\n  icon: /*#__PURE__*/_jsxDEV(AssessmentIcon, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 31\n  }, this),\n  path: '/reports'\n}];\nconst Dashboard = () => {\n  _s();\n  const dispatch = useDispatch();\n  const {\n    data,\n    status\n  } = useSelector(state => state.awsServices);\n  const theme = useTheme();\n  const [networkMetrics, setNetworkMetrics] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [websitePerformance, setWebsitePerformance] = useState(null);\n  const [serverMetrics, setServerMetrics] = useState(null);\n  const [responseTimeMetrics, setResponseTimeMetrics] = useState(null);\n  useEffect(() => {\n    // Fetch initial data\n    dispatch(fetchAWSStatus());\n    dispatch(fetchAllMetrics());\n\n    // Set up polling intervals\n    const statusInterval = setInterval(() => {\n      dispatch(fetchAWSStatus());\n    }, 30000); // Every 30 seconds\n\n    const metricsInterval = setInterval(() => {\n      dispatch(fetchAllMetrics());\n    }, 60000); // Every minute\n\n    return () => {\n      clearInterval(statusInterval);\n      clearInterval(metricsInterval);\n    };\n  }, [dispatch]);\n  const fetchNetworkMetrics = async () => {\n    try {\n      console.log('Fetching network metrics...');\n      const response = await fetch('http://localhost:5001/api/network-metrics');\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      const data = await response.json();\n      console.log('Network metrics data received:', data);\n      setNetworkMetrics(data);\n    } catch (error) {\n      console.error('Error fetching network metrics:', error);\n      setError(error.message);\n    }\n  };\n  const fetchWebsitePerformance = async () => {\n    try {\n      const response = await fetch('http://localhost:5001/api/website-performance');\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      const data = await response.json();\n      setWebsitePerformance(data);\n    } catch (error) {\n      console.error('Error fetching website performance:', error);\n    }\n  };\n  const fetchServerMetrics = async () => {\n    try {\n      const response = await fetch('http://localhost:5001/api/server-metrics');\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      const data = await response.json();\n      setServerMetrics(data);\n    } catch (error) {\n      console.error('Error fetching server metrics:', error);\n    }\n  };\n  const fetchResponseTimeMetrics = async () => {\n    try {\n      const response = await fetch('http://localhost:5001/api/response-time-metrics');\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      const data = await response.json();\n      setResponseTimeMetrics(data);\n    } catch (error) {\n      console.error('Error fetching response time metrics:', error);\n    }\n  };\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        console.log('Starting data fetch...');\n        setLoading(true);\n        setError(null);\n        await Promise.all([fetchNetworkMetrics(), fetchWebsitePerformance(), fetchServerMetrics(), fetchResponseTimeMetrics()\n        // Add other fetch calls here\n        ]);\n        console.log('Data fetch complete');\n        setLoading(false);\n      } catch (error) {\n        console.error('Error in data fetch:', error);\n        setError(error.message);\n        setLoading(false);\n      }\n    };\n    fetchData();\n    const interval = setInterval(fetchData, 30000);\n    return () => clearInterval(interval);\n  }, []);\n  const chartOptions = {\n    responsive: true,\n    maintainAspectRatio: false,\n    plugins: {\n      legend: {\n        position: 'top'\n      },\n      title: {\n        display: true,\n        text: 'CPU Utilization'\n      }\n    },\n    scales: {\n      y: {\n        beginAtZero: true,\n        max: 100,\n        title: {\n          display: true,\n          text: 'Percentage (%)'\n        }\n      }\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      minHeight: \"100vh\",\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 13\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      p: 3,\n      children: /*#__PURE__*/_jsxDEV(Alert, {\n        severity: \"error\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 13\n    }, this);\n  }\n\n  // Rest of your component remains the same...\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      background: 'linear-gradient(135deg, #1a237e 0%, #0d47a1 100%)',\n      minHeight: '100vh',\n      minWidth: '100vw',\n      position: 'fixed',\n      top: 0,\n      left: 0,\n      right: 0,\n      bottom: 0,\n      overflowY: 'auto',\n      display: 'flex'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        width: '280px',\n        backgroundColor: 'rgba(255, 255, 255, 0.1)',\n        backdropFilter: 'blur(8px)',\n        borderRight: '1px solid rgba(255, 255, 255, 0.1)',\n        padding: 2,\n        display: 'flex',\n        flexDirection: 'column',\n        gap: 2\n      },\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          p: 2,\n          display: 'flex',\n          alignItems: 'center',\n          gap: 2,\n          borderBottom: '1px solid rgba(255, 255, 255, 0.1)',\n          mb: 2\n        },\n        children: [/*#__PURE__*/_jsxDEV(DashboardIcon, {\n          sx: {\n            color: 'white',\n            fontSize: 32\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          color: \"white\",\n          fontWeight: \"bold\",\n          children: \"AWS Monitor\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 17\n      }, this), menuItems.map(item => /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          p: 2,\n          borderRadius: 1,\n          cursor: 'pointer',\n          display: 'flex',\n          alignItems: 'center',\n          gap: 2,\n          color: 'white',\n          transition: 'all 0.3s ease',\n          '&:hover': {\n            backgroundColor: 'rgba(255, 255, 255, 0.1)',\n            transform: 'translateX(5px)'\n          }\n        },\n        onClick: () => console.log(`Navigating to ${item.path}`),\n        children: [/*#__PURE__*/React.cloneElement(item.icon, {\n          sx: {\n            fontSize: 24\n          }\n        }), /*#__PURE__*/_jsxDEV(Typography, {\n          children: item.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 325,\n          columnNumber: 25\n        }, this)]\n      }, item.title, true, {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 21\n      }, this)), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          mt: 'auto',\n          p: 2,\n          borderTop: '1px solid rgba(255, 255, 255, 0.1)',\n          display: 'flex',\n          alignItems: 'center',\n          gap: 2,\n          color: 'white'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Avatar, {\n          sx: {\n            bgcolor: 'primary.main'\n          },\n          children: \"A\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 339,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"subtitle2\",\n            children: \"Admin User\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 341,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"caption\",\n            sx: {\n              opacity: 0.7\n            },\n            children: \"System Administrator\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 342,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 340,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 330,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        flex: 1,\n        p: 4,\n        overflowY: 'auto'\n      },\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        maxWidth: \"xl\",\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          mb: 4,\n          sx: {\n            display: 'flex',\n            alignItems: 'center',\n            gap: 2,\n            color: 'white'\n          },\n          children: [/*#__PURE__*/_jsxDEV(DashboardIcon, {\n            sx: {\n              fontSize: 40\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 363,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h4\",\n            fontWeight: \"bold\",\n            children: \"AWS Infrastructure Monitor\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 364,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 357,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 3,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            md: 4,\n            children: /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                bgcolor: 'background.paper',\n                p: 2,\n                borderRadius: 1\n              },\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                children: \"EC2 Instances\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 374,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 373,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 372,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            md: 4,\n            children: /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                bgcolor: 'background.paper',\n                p: 2,\n                borderRadius: 1\n              },\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                children: \"RDS Instances\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 380,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 379,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 378,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            md: 4,\n            children: /*#__PURE__*/_jsxDEV(WebsiteMonitoring, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 385,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 384,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            md: 4,\n            children: /*#__PURE__*/_jsxDEV(LogManagement, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 390,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 389,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            md: 4,\n            children: /*#__PURE__*/_jsxDEV(APMDashboard, {\n              metrics: data === null || data === void 0 ? void 0 : data.apmMetrics\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 393,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 392,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            md: 4,\n            children: /*#__PURE__*/_jsxDEV(RUMDashboard, {\n              metrics: data === null || data === void 0 ? void 0 : data.rumMetrics\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 396,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 395,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            md: 4,\n            children: /*#__PURE__*/_jsxDEV(DatabaseMetrics, {\n              metrics: data === null || data === void 0 ? void 0 : data.dbMetrics\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 401,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 400,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            md: 4,\n            children: /*#__PURE__*/_jsxDEV(DiskSpaceMetrics, {\n              metrics: data === null || data === void 0 ? void 0 : data.diskMetrics\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 404,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 403,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            md: 4,\n            children: /*#__PURE__*/_jsxDEV(NetworkMonitoring, {\n              networkMetrics: networkMetrics\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 407,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 406,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            md: 4,\n            children: /*#__PURE__*/_jsxDEV(WebsitePerformance, {\n              performanceData: websitePerformance\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 412,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 411,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            md: 4,\n            children: /*#__PURE__*/_jsxDEV(WebpageSpeedTest, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 415,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 414,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            md: 4,\n            children: /*#__PURE__*/_jsxDEV(ServerMonitoring, {\n              metrics: serverMetrics\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 418,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 417,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            md: 4,\n            children: /*#__PURE__*/_jsxDEV(ResponseTimeMonitoring, {\n              metrics: responseTimeMetrics\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 423,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 422,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 370,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 355,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 350,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 264,\n    columnNumber: 9\n  }, this);\n};\n_s(Dashboard, \"A678nIahoLubF1tGAwTrS1s4+ic=\", false, function () {\n  return [useDispatch, useSelector, useTheme];\n});\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useEffect","useState","useSelector","useDispatch","Grid","Container","Typography","Box","Card","CardContent","useTheme","alpha","CircularProgress","Alert","Paper","Avatar","styled","Line","DashboardIcon","StorageIcon","SpeedIcon","WebIcon","ComputerIcon","WarningIcon","ListAltIcon","TimelineIcon","HomeIcon","AdminPanelSettingsIcon","MonitorIcon","AssessmentIcon","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","Filler","register","WebsiteMonitoring","LogManagement","APMDashboard","RUMDashboard","DatabaseMetrics","DiskSpaceMetrics","NetworkMonitoring","WebsitePerformance","WebpageSpeedTest","ServerMonitoring","ResponseTimeMonitoring","fetchAWSStatus","fetchAllMetrics","jsxDEV","_jsxDEV","StyledCard","theme","height","background","palette","paper","backdropFilter","borderRadius","spacing","transition","transform","boxShadow","shadows","MetricBox","padding","display","alignItems","gap","menuItems","title","icon","fileName","_jsxFileName","lineNumber","columnNumber","path","Dashboard","_s","dispatch","data","status","state","awsServices","networkMetrics","setNetworkMetrics","loading","setLoading","error","setError","websitePerformance","setWebsitePerformance","serverMetrics","setServerMetrics","responseTimeMetrics","setResponseTimeMetrics","statusInterval","setInterval","metricsInterval","clearInterval","fetchNetworkMetrics","console","log","response","fetch","ok","Error","json","message","fetchWebsitePerformance","fetchServerMetrics","fetchResponseTimeMetrics","fetchData","Promise","all","interval","chartOptions","responsive","maintainAspectRatio","plugins","legend","position","text","scales","y","beginAtZero","max","justifyContent","minHeight","children","p","severity","sx","minWidth","top","left","right","bottom","overflowY","width","backgroundColor","borderRight","flexDirection","borderBottom","mb","color","fontSize","variant","fontWeight","map","item","cursor","onClick","cloneElement","mt","borderTop","bgcolor","opacity","flex","maxWidth","container","xs","md","metrics","apmMetrics","rumMetrics","dbMetrics","diskMetrics","performanceData","_c","$RefreshReg$"],"sources":["/Users/pradeepn/monitoringservice/aws-monitor/frontend/src/Components/Dashboard.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { \n    Grid, \n    Container, \n    Typography, \n    Box,\n    Card,\n    CardContent,\n    useTheme,\n    alpha,\n    CircularProgress,\n    Alert,\n    Paper,\n    Avatar\n} from '@mui/material';\nimport { styled } from '@mui/material/styles';\nimport { Line } from 'react-chartjs-2';\n\n// Material Icons\nimport DashboardIcon from '@mui/icons-material/Dashboard';\nimport StorageIcon from '@mui/icons-material/Storage';\nimport SpeedIcon from '@mui/icons-material/Speed';\nimport WebIcon from '@mui/icons-material/Web';\nimport ComputerIcon from '@mui/icons-material/Computer';\nimport WarningIcon from '@mui/icons-material/Warning';\nimport ListAltIcon from '@mui/icons-material/ListAlt';\nimport TimelineIcon from '@mui/icons-material/Timeline';\nimport HomeIcon from '@mui/icons-material/Home';\nimport AdminPanelSettingsIcon from '@mui/icons-material/AdminPanelSettings';\nimport MonitorIcon from '@mui/icons-material/Monitor';\nimport AssessmentIcon from '@mui/icons-material/Assessment';\n\n// Chart.js registration\nimport {\n    Chart as ChartJS,\n    CategoryScale,\n    LinearScale,\n    PointElement,\n    LineElement,\n    Title,\n    Tooltip,\n    Legend,\n    Filler\n} from 'chart.js';\n\n// Register ChartJS components\nChartJS.register(\n    CategoryScale,\n    LinearScale,\n    PointElement,\n    LineElement,\n    Title,\n    Tooltip,\n    Legend,\n    Filler\n);\n\n// Import your components\nimport WebsiteMonitoring from './WebsiteMonitoring';\nimport LogManagement from './LogManagement';\nimport APMDashboard from './APMDashboard';\nimport RUMDashboard from './RUMDashboard';\nimport DatabaseMetrics from './DatabaseMetrics';\nimport DiskSpaceMetrics from './DiskSpaceMetrics';\nimport NetworkMonitoring from './NetworkMonitoring';\nimport WebsitePerformance from './WebsitePerformance';\nimport WebpageSpeedTest from './WebpageSpeedTest';\nimport ServerMonitoring from './ServerMonitoring';\nimport ResponseTimeMonitoring from './ResponseTimeMonitoring';\n\n// Import the actions from your slice\nimport { \n    fetchAWSStatus, \n    fetchAllMetrics \n} from '../features/awsServices/awsServicesSlice';\n\n// Styled components remain the same\nconst StyledCard = styled(Card)(({ theme }) => ({\n    height: '100%',\n    background: alpha(theme.palette.background.paper, 0.9),\n    backdropFilter: 'blur(8px)',\n    borderRadius: theme.spacing(2),\n    transition: 'all 0.3s ease-in-out',\n    '&:hover': {\n        transform: 'translateY(-4px)',\n        boxShadow: theme.shadows[8],\n    }\n}));\n\nconst MetricBox = styled(Box)(({ theme }) => ({\n    padding: theme.spacing(2),\n    borderRadius: theme.spacing(2),\n    background: alpha(theme.palette.background.paper, 0.8),\n    backdropFilter: 'blur(8px)',\n    display: 'flex',\n    alignItems: 'center',\n    gap: theme.spacing(2)\n}));\n\nconst menuItems = [\n    { title: 'Home', icon: <HomeIcon />, path: '/' },\n    { title: 'Admin', icon: <AdminPanelSettingsIcon />, path: '/admin' },\n    { title: 'Monitoring', icon: <MonitorIcon />, path: '/monitoring' },\n    { title: 'Server', icon: <StorageIcon />, path: '/server' },\n    { title: 'Reports', icon: <AssessmentIcon />, path: '/reports' }\n];\n\nconst Dashboard = () => {\n    const dispatch = useDispatch();\n    const { data, status } = useSelector((state) => state.awsServices);\n    const theme = useTheme();\n    const [networkMetrics, setNetworkMetrics] = useState(null);\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState(null);\n    const [websitePerformance, setWebsitePerformance] = useState(null);\n    const [serverMetrics, setServerMetrics] = useState(null);\n    const [responseTimeMetrics, setResponseTimeMetrics] = useState(null);\n\n    useEffect(() => {\n        // Fetch initial data\n        dispatch(fetchAWSStatus());\n        dispatch(fetchAllMetrics());\n\n        // Set up polling intervals\n        const statusInterval = setInterval(() => {\n            dispatch(fetchAWSStatus());\n        }, 30000); // Every 30 seconds\n\n        const metricsInterval = setInterval(() => {\n            dispatch(fetchAllMetrics());\n        }, 60000); // Every minute\n\n        return () => {\n            clearInterval(statusInterval);\n            clearInterval(metricsInterval);\n        };\n    }, [dispatch]);\n\n    const fetchNetworkMetrics = async () => {\n        try {\n            console.log('Fetching network metrics...');\n            const response = await fetch('http://localhost:5001/api/network-metrics');\n            if (!response.ok) {\n                throw new Error(`HTTP error! status: ${response.status}`);\n            }\n            const data = await response.json();\n            console.log('Network metrics data received:', data);\n            setNetworkMetrics(data);\n        } catch (error) {\n            console.error('Error fetching network metrics:', error);\n            setError(error.message);\n        }\n    };\n\n    const fetchWebsitePerformance = async () => {\n        try {\n            const response = await fetch('http://localhost:5001/api/website-performance');\n            if (!response.ok) {\n                throw new Error(`HTTP error! status: ${response.status}`);\n            }\n            const data = await response.json();\n            setWebsitePerformance(data);\n        } catch (error) {\n            console.error('Error fetching website performance:', error);\n        }\n    };\n\n    const fetchServerMetrics = async () => {\n        try {\n            const response = await fetch('http://localhost:5001/api/server-metrics');\n            if (!response.ok) {\n                throw new Error(`HTTP error! status: ${response.status}`);\n            }\n            const data = await response.json();\n            setServerMetrics(data);\n        } catch (error) {\n            console.error('Error fetching server metrics:', error);\n        }\n    };\n\n    const fetchResponseTimeMetrics = async () => {\n        try {\n            const response = await fetch('http://localhost:5001/api/response-time-metrics');\n            if (!response.ok) {\n                throw new Error(`HTTP error! status: ${response.status}`);\n            }\n            const data = await response.json();\n            setResponseTimeMetrics(data);\n        } catch (error) {\n            console.error('Error fetching response time metrics:', error);\n        }\n    };\n\n    useEffect(() => {\n        const fetchData = async () => {\n            try {\n                console.log('Starting data fetch...');\n                setLoading(true);\n                setError(null);\n                await Promise.all([\n                    fetchNetworkMetrics(),\n                    fetchWebsitePerformance(),\n                    fetchServerMetrics(),\n                    fetchResponseTimeMetrics(),\n                    // Add other fetch calls here\n                ]);\n                console.log('Data fetch complete');\n                setLoading(false);\n            } catch (error) {\n                console.error('Error in data fetch:', error);\n                setError(error.message);\n                setLoading(false);\n            }\n        };\n\n        fetchData();\n        const interval = setInterval(fetchData, 30000);\n        return () => clearInterval(interval);\n    }, []);\n\n    const chartOptions = {\n        responsive: true,\n        maintainAspectRatio: false,\n        plugins: {\n            legend: {\n                position: 'top',\n            },\n            title: {\n                display: true,\n                text: 'CPU Utilization'\n            }\n        },\n        scales: {\n            y: {\n                beginAtZero: true,\n                max: 100,\n                title: {\n                    display: true,\n                    text: 'Percentage (%)'\n                }\n            }\n        }\n    };\n\n    if (loading) {\n        return (\n            <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\" minHeight=\"100vh\">\n                <CircularProgress />\n            </Box>\n        );\n    }\n\n    if (error) {\n        return (\n            <Box p={3}>\n                <Alert severity=\"error\">{error}</Alert>\n            </Box>\n        );\n    }\n\n    // Rest of your component remains the same...\n    return (\n        <Box sx={{ \n            background: 'linear-gradient(135deg, #1a237e 0%, #0d47a1 100%)',\n            minHeight: '100vh',\n            minWidth: '100vw',\n            position: 'fixed',\n            top: 0,\n            left: 0,\n            right: 0,\n            bottom: 0,\n            overflowY: 'auto',\n            display: 'flex'\n        }}>\n            {/* Left Sidebar Navigation */}\n            <Box sx={{\n                width: '280px',\n                backgroundColor: 'rgba(255, 255, 255, 0.1)',\n                backdropFilter: 'blur(8px)',\n                borderRight: '1px solid rgba(255, 255, 255, 0.1)',\n                padding: 2,\n                display: 'flex',\n                flexDirection: 'column',\n                gap: 2\n            }}>\n                {/* Logo/Brand */}\n                <Box sx={{ \n                    p: 2, \n                    display: 'flex', \n                    alignItems: 'center', \n                    gap: 2,\n                    borderBottom: '1px solid rgba(255, 255, 255, 0.1)',\n                    mb: 2\n                }}>\n                    <DashboardIcon sx={{ color: 'white', fontSize: 32 }} />\n                    <Typography variant=\"h6\" color=\"white\" fontWeight=\"bold\">\n                        AWS Monitor\n                    </Typography>\n                </Box>\n\n                {/* Navigation Items */}\n                {menuItems.map((item) => (\n                    <Box\n                        key={item.title}\n                        sx={{\n                            p: 2,\n                            borderRadius: 1,\n                            cursor: 'pointer',\n                            display: 'flex',\n                            alignItems: 'center',\n                            gap: 2,\n                            color: 'white',\n                            transition: 'all 0.3s ease',\n                            '&:hover': {\n                                backgroundColor: 'rgba(255, 255, 255, 0.1)',\n                                transform: 'translateX(5px)'\n                            }\n                        }}\n                        onClick={() => console.log(`Navigating to ${item.path}`)}\n                    >\n                        {React.cloneElement(item.icon, { \n                            sx: { fontSize: 24 }\n                        })}\n                        <Typography>{item.title}</Typography>\n                    </Box>\n                ))}\n\n                {/* User Profile Section */}\n                <Box sx={{ \n                    mt: 'auto',\n                    p: 2,\n                    borderTop: '1px solid rgba(255, 255, 255, 0.1)',\n                    display: 'flex',\n                    alignItems: 'center',\n                    gap: 2,\n                    color: 'white'\n                }}>\n                    <Avatar sx={{ bgcolor: 'primary.main' }}>A</Avatar>\n                    <Box>\n                        <Typography variant=\"subtitle2\">Admin User</Typography>\n                        <Typography variant=\"caption\" sx={{ opacity: 0.7 }}>\n                            System Administrator\n                        </Typography>\n                    </Box>\n                </Box>\n            </Box>\n\n            {/* Main Content Area */}\n            <Box sx={{\n                flex: 1,\n                p: 4,\n                overflowY: 'auto'\n            }}>\n                <Container maxWidth=\"xl\">\n                    {/* Header */}\n                    <Box mb={4} sx={{ \n                        display: 'flex', \n                        alignItems: 'center',\n                        gap: 2,\n                        color: 'white'\n                    }}>\n                        <DashboardIcon sx={{ fontSize: 40 }} />\n                        <Typography variant=\"h4\" fontWeight=\"bold\">\n                            AWS Infrastructure Monitor\n                        </Typography>\n                    </Box>\n\n                    {/* Main Grid - Updated to 3x3 layout */}\n                    <Grid container spacing={3}>\n                        {/* Row 1 */}\n                        <Grid item xs={12} md={4}>\n                            <Box sx={{ bgcolor: 'background.paper', p: 2, borderRadius: 1 }}>\n                                <Typography variant=\"h6\">EC2 Instances</Typography>\n                                {/* EC2 chart component */}\n                            </Box>\n                        </Grid>\n                        <Grid item xs={12} md={4}>\n                            <Box sx={{ bgcolor: 'background.paper', p: 2, borderRadius: 1 }}>\n                                <Typography variant=\"h6\">RDS Instances</Typography>\n                                {/* RDS chart component */}\n                            </Box>\n                        </Grid>\n                        <Grid item xs={12} md={4}>\n                            <WebsiteMonitoring />\n                        </Grid>\n\n                        {/* Row 2 */}\n                        <Grid item xs={12} md={4}>\n                            <LogManagement />\n                        </Grid>\n                        <Grid item xs={12} md={4}>\n                            <APMDashboard metrics={data?.apmMetrics} />\n                        </Grid>\n                        <Grid item xs={12} md={4}>\n                            <RUMDashboard metrics={data?.rumMetrics} />\n                        </Grid>\n\n                        {/* Row 3 */}\n                        <Grid item xs={12} md={4}>\n                            <DatabaseMetrics metrics={data?.dbMetrics} />\n                        </Grid>\n                        <Grid item xs={12} md={4}>\n                            <DiskSpaceMetrics metrics={data?.diskMetrics} />\n                        </Grid>\n                        <Grid item xs={12} md={4}>\n                            <NetworkMonitoring networkMetrics={networkMetrics} />\n                        </Grid>\n\n                        {/* Row 4 */}\n                        <Grid item xs={12} md={4}>\n                            <WebsitePerformance performanceData={websitePerformance} />\n                        </Grid>\n                        <Grid item xs={12} md={4}>\n                            <WebpageSpeedTest />\n                        </Grid>\n                        <Grid item xs={12} md={4}>\n                            <ServerMonitoring metrics={serverMetrics} />\n                        </Grid>\n\n                        {/* Row 5 */}\n                        <Grid item xs={12} md={4}>\n                            <ResponseTimeMonitoring metrics={responseTimeMetrics} />\n                        </Grid>\n                    </Grid>\n                </Container>\n            </Box>\n        </Box>\n    );\n};\n\nexport default Dashboard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"/Users/pradeepn/monitoringservice/aws-monitor/frontend/src/Components/DatabaseMetrics.jsx\";\nimport React from 'react';\nimport { Card, CardContent, Typography, Grid, Box } from '@mui/material';\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend } from 'chart.js';\nimport { Line } from 'react-chartjs-2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend);\nconst DatabaseMetrics = ({\n  metrics\n}) => {\n  var _metrics$read_latency, _metrics$read_latency2, _metrics$write_latenc, _metrics$write_latenc2;\n  const formatTimestamp = timestamp => {\n    return new Date(timestamp).toLocaleTimeString();\n  };\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: /*#__PURE__*/_jsxDEV(CardContent, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        gutterBottom: true,\n        children: \"Database Performance\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 3,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 6,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            children: /*#__PURE__*/_jsxDEV(CardContent, {\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"subtitle1\",\n                children: \"Read Latency\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 40,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                height: 300,\n                children: /*#__PURE__*/_jsxDEV(Line, {\n                  options: {\n                    responsive: true,\n                    maintainAspectRatio: false,\n                    plugins: {\n                      legend: {\n                        position: 'top'\n                      },\n                      title: {\n                        display: true,\n                        text: 'Database Read Latency'\n                      }\n                    },\n                    scales: {\n                      y: {\n                        beginAtZero: true,\n                        title: {\n                          display: true,\n                          text: 'Latency (ms)'\n                        }\n                      }\n                    }\n                  },\n                  data: {\n                    labels: (metrics === null || metrics === void 0 ? void 0 : (_metrics$read_latency = metrics.read_latency) === null || _metrics$read_latency === void 0 ? void 0 : _metrics$read_latency.map(m => formatTimestamp(m.Timestamp))) || [],\n                    datasets: [{\n                      label: 'Read Latency',\n                      data: (metrics === null || metrics === void 0 ? void 0 : (_metrics$read_latency2 = metrics.read_latency) === null || _metrics$read_latency2 === void 0 ? void 0 : _metrics$read_latency2.map(m => m.Average * 1000)) || [],\n                      // Convert to ms\n                      borderColor: 'rgb(75, 192, 192)',\n                      tension: 0.1\n                    }]\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 42,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 41,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 6,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            children: /*#__PURE__*/_jsxDEV(CardContent, {\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"subtitle1\",\n                children: \"Write Latency\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                height: 300,\n                children: /*#__PURE__*/_jsxDEV(Line, {\n                  options: {\n                    responsive: true,\n                    maintainAspectRatio: false,\n                    plugins: {\n                      legend: {\n                        position: 'top'\n                      },\n                      title: {\n                        display: true,\n                        text: 'Database Write Latency'\n                      }\n                    },\n                    scales: {\n                      y: {\n                        beginAtZero: true,\n                        title: {\n                          display: true,\n                          text: 'Latency (ms)'\n                        }\n                      }\n                    }\n                  },\n                  data: {\n                    labels: (metrics === null || metrics === void 0 ? void 0 : (_metrics$write_latenc = metrics.write_latency) === null || _metrics$write_latenc === void 0 ? void 0 : _metrics$write_latenc.map(m => formatTimestamp(m.Timestamp))) || [],\n                    datasets: [{\n                      label: 'Write Latency',\n                      data: (metrics === null || metrics === void 0 ? void 0 : (_metrics$write_latenc2 = metrics.write_latency) === null || _metrics$write_latenc2 === void 0 ? void 0 : _metrics$write_latenc2.map(m => m.Average * 1000)) || [],\n                      // Convert to ms\n                      borderColor: 'rgb(255, 99, 132)',\n                      tension: 0.1\n                    }]\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 86,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n};\n_c = DatabaseMetrics;\nexport default DatabaseMetrics;\nvar _c;\n$RefreshReg$(_c, \"DatabaseMetrics\");","map":{"version":3,"names":["React","Card","CardContent","Typography","Grid","Box","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","Line","jsxDEV","_jsxDEV","register","DatabaseMetrics","metrics","_metrics$read_latency","_metrics$read_latency2","_metrics$write_latenc","_metrics$write_latenc2","formatTimestamp","timestamp","Date","toLocaleTimeString","children","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","container","spacing","item","xs","md","height","options","responsive","maintainAspectRatio","plugins","legend","position","title","display","text","scales","y","beginAtZero","data","labels","read_latency","map","m","Timestamp","datasets","label","Average","borderColor","tension","write_latency","_c","$RefreshReg$"],"sources":["/Users/pradeepn/monitoringservice/aws-monitor/frontend/src/Components/DatabaseMetrics.jsx"],"sourcesContent":["import React from 'react';\nimport { Card, CardContent, Typography, Grid, Box } from '@mui/material';\nimport {\n    Chart as ChartJS,\n    CategoryScale,\n    LinearScale,\n    PointElement,\n    LineElement,\n    Title,\n    Tooltip,\n    Legend\n} from 'chart.js';\nimport { Line } from 'react-chartjs-2';\n\nChartJS.register(\n    CategoryScale,\n    LinearScale,\n    PointElement,\n    LineElement,\n    Title,\n    Tooltip,\n    Legend\n);\n\nconst DatabaseMetrics = ({ metrics }) => {\n    const formatTimestamp = (timestamp) => {\n        return new Date(timestamp).toLocaleTimeString();\n    };\n\n    return (\n        <Card>\n            <CardContent>\n                <Typography variant=\"h6\" gutterBottom>\n                    Database Performance\n                </Typography>\n                <Grid container spacing={3}>\n                    <Grid item xs={12} md={6}>\n                        <Card>\n                            <CardContent>\n                                <Typography variant=\"subtitle1\">Read Latency</Typography>\n                                <Box height={300}>\n                                    <Line\n                                        options={{\n                                            responsive: true,\n                                            maintainAspectRatio: false,\n                                            plugins: {\n                                                legend: {\n                                                    position: 'top',\n                                                },\n                                                title: {\n                                                    display: true,\n                                                    text: 'Database Read Latency'\n                                                }\n                                            },\n                                            scales: {\n                                                y: {\n                                                    beginAtZero: true,\n                                                    title: {\n                                                        display: true,\n                                                        text: 'Latency (ms)'\n                                                    }\n                                                }\n                                            }\n                                        }}\n                                        data={{\n                                            labels: metrics?.read_latency?.map(m => \n                                                formatTimestamp(m.Timestamp)) || [],\n                                            datasets: [{\n                                                label: 'Read Latency',\n                                                data: metrics?.read_latency?.map(m => \n                                                    m.Average * 1000) || [], // Convert to ms\n                                                borderColor: 'rgb(75, 192, 192)',\n                                                tension: 0.1\n                                            }]\n                                        }}\n                                    />\n                                </Box>\n                            </CardContent>\n                        </Card>\n                    </Grid>\n                    <Grid item xs={12} md={6}>\n                        <Card>\n                            <CardContent>\n                                <Typography variant=\"subtitle1\">Write Latency</Typography>\n                                <Box height={300}>\n                                    <Line\n                                        options={{\n                                            responsive: true,\n                                            maintainAspectRatio: false,\n                                            plugins: {\n                                                legend: {\n                                                    position: 'top',\n                                                },\n                                                title: {\n                                                    display: true,\n                                                    text: 'Database Write Latency'\n                                                }\n                                            },\n                                            scales: {\n                                                y: {\n                                                    beginAtZero: true,\n                                                    title: {\n                                                        display: true,\n                                                        text: 'Latency (ms)'\n                                                    }\n                                                }\n                                            }\n                                        }}\n                                        data={{\n                                            labels: metrics?.write_latency?.map(m => \n                                                formatTimestamp(m.Timestamp)) || [],\n                                            datasets: [{\n                                                label: 'Write Latency',\n                                                data: metrics?.write_latency?.map(m => \n                                                    m.Average * 1000) || [], // Convert to ms\n                                                borderColor: 'rgb(255, 99, 132)',\n                                                tension: 0.1\n                                            }]\n                                        }}\n                                    />\n                                </Box>\n                            </CardContent>\n                        </Card>\n                    </Grid>\n                </Grid>\n            </CardContent>\n        </Card>\n    );\n};\n\nexport default DatabaseMetrics; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
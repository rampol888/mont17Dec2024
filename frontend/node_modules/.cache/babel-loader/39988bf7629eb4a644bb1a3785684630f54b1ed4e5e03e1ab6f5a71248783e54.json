{"ast":null,"code":"var _jsxFileName = \"/Users/pradeepn/monitoringservice/aws-monitor/frontend/src/Components/NetworkMonitoring.jsx\";\nimport React from 'react';\nimport { Card, CardContent, Typography, Grid, Box } from '@mui/material';\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend } from 'chart.js';\nimport { Line } from 'react-chartjs-2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend);\nconst NetworkMonitoring = ({\n  networkMetrics\n}) => {\n  if (!networkMetrics) {\n    return null;\n  }\n  const formatBytes = bytes => {\n    if (bytes === 0) return '0 B';\n    const k = 1024;\n    const sizes = ['B', 'KB', 'MB', 'GB', 'TB'];\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\n    return `${parseFloat((bytes / Math.pow(k, i)).toFixed(2))} ${sizes[i]}`;\n  };\n  const networkInData = {\n    labels: networkMetrics.networkIn.average.map(point => new Date(point.timestamp).toLocaleTimeString()),\n    datasets: [{\n      label: 'Network In (Average)',\n      data: networkMetrics.networkIn.average.map(point => point.value),\n      borderColor: 'rgb(75, 192, 192)',\n      tension: 0.1\n    }, {\n      label: 'Network In (Maximum)',\n      data: networkMetrics.networkIn.maximum.map(point => point.value),\n      borderColor: 'rgb(255, 99, 132)',\n      tension: 0.1\n    }]\n  };\n  const networkOutData = {\n    labels: networkMetrics.networkOut.average.map(point => new Date(point.timestamp).toLocaleTimeString()),\n    datasets: [{\n      label: 'Network Out (Average)',\n      data: networkMetrics.networkOut.average.map(point => point.value),\n      borderColor: 'rgb(54, 162, 235)',\n      tension: 0.1\n    }, {\n      label: 'Network Out (Maximum)',\n      data: networkMetrics.networkOut.maximum.map(point => point.value),\n      borderColor: 'rgb(255, 159, 64)',\n      tension: 0.1\n    }]\n  };\n  const options = {\n    responsive: true,\n    plugins: {\n      legend: {\n        position: 'top'\n      },\n      title: {\n        display: true,\n        text: 'Network Traffic'\n      }\n    },\n    scales: {\n      y: {\n        ticks: {\n          callback: function (value) {\n            return formatBytes(value);\n          }\n        }\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: /*#__PURE__*/_jsxDEV(CardContent, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        gutterBottom: true,\n        children: \"Network Monitoring\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 3,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 6,\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            children: /*#__PURE__*/_jsxDEV(Line, {\n              data: networkInData,\n              options: options\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 6,\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            children: /*#__PURE__*/_jsxDEV(Line, {\n              data: networkOutData,\n              options: options\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"subtitle2\",\n            color: \"textSecondary\",\n            children: [\"Total Packets In: \", networkMetrics.packetsIn.reduce((sum, point) => sum + point.value, 0).toLocaleString()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"subtitle2\",\n            color: \"textSecondary\",\n            children: [\"Total Packets Out: \", networkMetrics.packetsOut.reduce((sum, point) => sum + point.value, 0).toLocaleString()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 9\n  }, this);\n};\n_c = NetworkMonitoring;\nexport default NetworkMonitoring;\nvar _c;\n$RefreshReg$(_c, \"NetworkMonitoring\");","map":{"version":3,"names":["React","Card","CardContent","Typography","Grid","Box","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","Line","jsxDEV","_jsxDEV","register","NetworkMonitoring","networkMetrics","formatBytes","bytes","k","sizes","i","Math","floor","log","parseFloat","pow","toFixed","networkInData","labels","networkIn","average","map","point","Date","timestamp","toLocaleTimeString","datasets","label","data","value","borderColor","tension","maximum","networkOutData","networkOut","options","responsive","plugins","legend","position","title","display","text","scales","y","ticks","callback","children","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","container","spacing","item","xs","md","color","packetsIn","reduce","sum","toLocaleString","packetsOut","_c","$RefreshReg$"],"sources":["/Users/pradeepn/monitoringservice/aws-monitor/frontend/src/Components/NetworkMonitoring.jsx"],"sourcesContent":["import React from 'react';\nimport { \n    Card, \n    CardContent, \n    Typography, \n    Grid, \n    Box \n} from '@mui/material';\nimport {\n    Chart as ChartJS,\n    CategoryScale,\n    LinearScale,\n    PointElement,\n    LineElement,\n    Title,\n    Tooltip,\n    Legend\n} from 'chart.js';\nimport { Line } from 'react-chartjs-2';\n\nChartJS.register(\n    CategoryScale,\n    LinearScale,\n    PointElement,\n    LineElement,\n    Title,\n    Tooltip,\n    Legend\n);\n\nconst NetworkMonitoring = ({ networkMetrics }) => {\n    if (!networkMetrics) {\n        return null;\n    }\n\n    const formatBytes = (bytes) => {\n        if (bytes === 0) return '0 B';\n        const k = 1024;\n        const sizes = ['B', 'KB', 'MB', 'GB', 'TB'];\n        const i = Math.floor(Math.log(bytes) / Math.log(k));\n        return `${parseFloat((bytes / Math.pow(k, i)).toFixed(2))} ${sizes[i]}`;\n    };\n\n    const networkInData = {\n        labels: networkMetrics.networkIn.average.map(point => \n            new Date(point.timestamp).toLocaleTimeString()\n        ),\n        datasets: [\n            {\n                label: 'Network In (Average)',\n                data: networkMetrics.networkIn.average.map(point => point.value),\n                borderColor: 'rgb(75, 192, 192)',\n                tension: 0.1\n            },\n            {\n                label: 'Network In (Maximum)',\n                data: networkMetrics.networkIn.maximum.map(point => point.value),\n                borderColor: 'rgb(255, 99, 132)',\n                tension: 0.1\n            }\n        ]\n    };\n\n    const networkOutData = {\n        labels: networkMetrics.networkOut.average.map(point => \n            new Date(point.timestamp).toLocaleTimeString()\n        ),\n        datasets: [\n            {\n                label: 'Network Out (Average)',\n                data: networkMetrics.networkOut.average.map(point => point.value),\n                borderColor: 'rgb(54, 162, 235)',\n                tension: 0.1\n            },\n            {\n                label: 'Network Out (Maximum)',\n                data: networkMetrics.networkOut.maximum.map(point => point.value),\n                borderColor: 'rgb(255, 159, 64)',\n                tension: 0.1\n            }\n        ]\n    };\n\n    const options = {\n        responsive: true,\n        plugins: {\n            legend: {\n                position: 'top',\n            },\n            title: {\n                display: true,\n                text: 'Network Traffic'\n            }\n        },\n        scales: {\n            y: {\n                ticks: {\n                    callback: function(value) {\n                        return formatBytes(value);\n                    }\n                }\n            }\n        }\n    };\n\n    return (\n        <Card>\n            <CardContent>\n                <Typography variant=\"h6\" gutterBottom>\n                    Network Monitoring\n                </Typography>\n                <Grid container spacing={3}>\n                    <Grid item xs={12} md={6}>\n                        <Box>\n                            <Line data={networkInData} options={options} />\n                        </Box>\n                    </Grid>\n                    <Grid item xs={12} md={6}>\n                        <Box>\n                            <Line data={networkOutData} options={options} />\n                        </Box>\n                    </Grid>\n                    <Grid item xs={12}>\n                        <Typography variant=\"subtitle2\" color=\"textSecondary\">\n                            Total Packets In: {networkMetrics.packetsIn.reduce((sum, point) => sum + point.value, 0).toLocaleString()}\n                        </Typography>\n                        <Typography variant=\"subtitle2\" color=\"textSecondary\">\n                            Total Packets Out: {networkMetrics.packetsOut.reduce((sum, point) => sum + point.value, 0).toLocaleString()}\n                        </Typography>\n                    </Grid>\n                </Grid>\n            </CardContent>\n        </Card>\n    );\n};\n\nexport default NetworkMonitoring; "],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SACIC,IAAI,EACJC,WAAW,EACXC,UAAU,EACVC,IAAI,EACJC,GAAG,QACA,eAAe;AACtB,SACIC,KAAK,IAAIC,OAAO,EAChBC,aAAa,EACbC,WAAW,EACXC,YAAY,EACZC,WAAW,EACXC,KAAK,EACLC,OAAO,EACPC,MAAM,QACH,UAAU;AACjB,SAASC,IAAI,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvCV,OAAO,CAACW,QAAQ,CACZV,aAAa,EACbC,WAAW,EACXC,YAAY,EACZC,WAAW,EACXC,KAAK,EACLC,OAAO,EACPC,MACJ,CAAC;AAED,MAAMK,iBAAiB,GAAGA,CAAC;EAAEC;AAAe,CAAC,KAAK;EAC9C,IAAI,CAACA,cAAc,EAAE;IACjB,OAAO,IAAI;EACf;EAEA,MAAMC,WAAW,GAAIC,KAAK,IAAK;IAC3B,IAAIA,KAAK,KAAK,CAAC,EAAE,OAAO,KAAK;IAC7B,MAAMC,CAAC,GAAG,IAAI;IACd,MAAMC,KAAK,GAAG,CAAC,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC;IAC3C,MAAMC,CAAC,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,GAAG,CAACN,KAAK,CAAC,GAAGI,IAAI,CAACE,GAAG,CAACL,CAAC,CAAC,CAAC;IACnD,OAAO,GAAGM,UAAU,CAAC,CAACP,KAAK,GAAGI,IAAI,CAACI,GAAG,CAACP,CAAC,EAAEE,CAAC,CAAC,EAAEM,OAAO,CAAC,CAAC,CAAC,CAAC,IAAIP,KAAK,CAACC,CAAC,CAAC,EAAE;EAC3E,CAAC;EAED,MAAMO,aAAa,GAAG;IAClBC,MAAM,EAAEb,cAAc,CAACc,SAAS,CAACC,OAAO,CAACC,GAAG,CAACC,KAAK,IAC9C,IAAIC,IAAI,CAACD,KAAK,CAACE,SAAS,CAAC,CAACC,kBAAkB,CAAC,CACjD,CAAC;IACDC,QAAQ,EAAE,CACN;MACIC,KAAK,EAAE,sBAAsB;MAC7BC,IAAI,EAAEvB,cAAc,CAACc,SAAS,CAACC,OAAO,CAACC,GAAG,CAACC,KAAK,IAAIA,KAAK,CAACO,KAAK,CAAC;MAChEC,WAAW,EAAE,mBAAmB;MAChCC,OAAO,EAAE;IACb,CAAC,EACD;MACIJ,KAAK,EAAE,sBAAsB;MAC7BC,IAAI,EAAEvB,cAAc,CAACc,SAAS,CAACa,OAAO,CAACX,GAAG,CAACC,KAAK,IAAIA,KAAK,CAACO,KAAK,CAAC;MAChEC,WAAW,EAAE,mBAAmB;MAChCC,OAAO,EAAE;IACb,CAAC;EAET,CAAC;EAED,MAAME,cAAc,GAAG;IACnBf,MAAM,EAAEb,cAAc,CAAC6B,UAAU,CAACd,OAAO,CAACC,GAAG,CAACC,KAAK,IAC/C,IAAIC,IAAI,CAACD,KAAK,CAACE,SAAS,CAAC,CAACC,kBAAkB,CAAC,CACjD,CAAC;IACDC,QAAQ,EAAE,CACN;MACIC,KAAK,EAAE,uBAAuB;MAC9BC,IAAI,EAAEvB,cAAc,CAAC6B,UAAU,CAACd,OAAO,CAACC,GAAG,CAACC,KAAK,IAAIA,KAAK,CAACO,KAAK,CAAC;MACjEC,WAAW,EAAE,mBAAmB;MAChCC,OAAO,EAAE;IACb,CAAC,EACD;MACIJ,KAAK,EAAE,uBAAuB;MAC9BC,IAAI,EAAEvB,cAAc,CAAC6B,UAAU,CAACF,OAAO,CAACX,GAAG,CAACC,KAAK,IAAIA,KAAK,CAACO,KAAK,CAAC;MACjEC,WAAW,EAAE,mBAAmB;MAChCC,OAAO,EAAE;IACb,CAAC;EAET,CAAC;EAED,MAAMI,OAAO,GAAG;IACZC,UAAU,EAAE,IAAI;IAChBC,OAAO,EAAE;MACLC,MAAM,EAAE;QACJC,QAAQ,EAAE;MACd,CAAC;MACDC,KAAK,EAAE;QACHC,OAAO,EAAE,IAAI;QACbC,IAAI,EAAE;MACV;IACJ,CAAC;IACDC,MAAM,EAAE;MACJC,CAAC,EAAE;QACCC,KAAK,EAAE;UACHC,QAAQ,EAAE,SAAAA,CAASjB,KAAK,EAAE;YACtB,OAAOvB,WAAW,CAACuB,KAAK,CAAC;UAC7B;QACJ;MACJ;IACJ;EACJ,CAAC;EAED,oBACI3B,OAAA,CAAChB,IAAI;IAAA6D,QAAA,eACD7C,OAAA,CAACf,WAAW;MAAA4D,QAAA,gBACR7C,OAAA,CAACd,UAAU;QAAC4D,OAAO,EAAC,IAAI;QAACC,YAAY;QAAAF,QAAA,EAAC;MAEtC;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAY,CAAC,eACbnD,OAAA,CAACb,IAAI;QAACiE,SAAS;QAACC,OAAO,EAAE,CAAE;QAAAR,QAAA,gBACvB7C,OAAA,CAACb,IAAI;UAACmE,IAAI;UAACC,EAAE,EAAE,EAAG;UAACC,EAAE,EAAE,CAAE;UAAAX,QAAA,eACrB7C,OAAA,CAACZ,GAAG;YAAAyD,QAAA,eACA7C,OAAA,CAACF,IAAI;cAAC4B,IAAI,EAAEX,aAAc;cAACkB,OAAO,EAAEA;YAAQ;cAAAe,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC9C;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACJ,CAAC,eACPnD,OAAA,CAACb,IAAI;UAACmE,IAAI;UAACC,EAAE,EAAE,EAAG;UAACC,EAAE,EAAE,CAAE;UAAAX,QAAA,eACrB7C,OAAA,CAACZ,GAAG;YAAAyD,QAAA,eACA7C,OAAA,CAACF,IAAI;cAAC4B,IAAI,EAAEK,cAAe;cAACE,OAAO,EAAEA;YAAQ;cAAAe,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC/C;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACJ,CAAC,eACPnD,OAAA,CAACb,IAAI;UAACmE,IAAI;UAACC,EAAE,EAAE,EAAG;UAAAV,QAAA,gBACd7C,OAAA,CAACd,UAAU;YAAC4D,OAAO,EAAC,WAAW;YAACW,KAAK,EAAC,eAAe;YAAAZ,QAAA,GAAC,oBAChC,EAAC1C,cAAc,CAACuD,SAAS,CAACC,MAAM,CAAC,CAACC,GAAG,EAAExC,KAAK,KAAKwC,GAAG,GAAGxC,KAAK,CAACO,KAAK,EAAE,CAAC,CAAC,CAACkC,cAAc,CAAC,CAAC;UAAA;YAAAb,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACjG,CAAC,eACbnD,OAAA,CAACd,UAAU;YAAC4D,OAAO,EAAC,WAAW;YAACW,KAAK,EAAC,eAAe;YAAAZ,QAAA,GAAC,qBAC/B,EAAC1C,cAAc,CAAC2D,UAAU,CAACH,MAAM,CAAC,CAACC,GAAG,EAAExC,KAAK,KAAKwC,GAAG,GAAGxC,KAAK,CAACO,KAAK,EAAE,CAAC,CAAC,CAACkC,cAAc,CAAC,CAAC;UAAA;YAAAb,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACnG,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACX,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACZ,CAAC;AAEf,CAAC;AAACY,EAAA,GAxGI7D,iBAAiB;AA0GvB,eAAeA,iBAAiB;AAAC,IAAA6D,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
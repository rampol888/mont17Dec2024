{"ast":null,"code":"var _jsxFileName = \"/Users/pradeepn/monitoringservice/aws-monitor/frontend/src/Components/APMDashboard.jsx\";\nimport React from 'react';\nimport { Card, CardContent, Typography, Grid, Box } from '@mui/material';\nimport { Line } from 'react-chartjs-2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst APMDashboard = ({\n  metrics\n}) => {\n  var _metrics$responseTime, _metrics$responseTime2, _metrics$errorRates, _metrics$errorRates2;\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: /*#__PURE__*/_jsxDEV(CardContent, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        gutterBottom: true,\n        children: \"Application Performance\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 3,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 6,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            children: /*#__PURE__*/_jsxDEV(CardContent, {\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"subtitle1\",\n                children: \"Response Time\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 14,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Line, {\n                data: {\n                  labels: (metrics === null || metrics === void 0 ? void 0 : (_metrics$responseTime = metrics.responseTimes) === null || _metrics$responseTime === void 0 ? void 0 : _metrics$responseTime.map(m => m.timestamp)) || [],\n                  datasets: [{\n                    label: 'Avg Response Time (ms)',\n                    data: (metrics === null || metrics === void 0 ? void 0 : (_metrics$responseTime2 = metrics.responseTimes) === null || _metrics$responseTime2 === void 0 ? void 0 : _metrics$responseTime2.map(m => m.value)) || [],\n                    borderColor: 'rgb(75, 192, 192)'\n                  }]\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 15,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 13,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 12,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 6,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            children: /*#__PURE__*/_jsxDEV(CardContent, {\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"subtitle1\",\n                children: \"Error Rate\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 31,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Line, {\n                data: {\n                  labels: (metrics === null || metrics === void 0 ? void 0 : (_metrics$errorRates = metrics.errorRates) === null || _metrics$errorRates === void 0 ? void 0 : _metrics$errorRates.map(m => m.timestamp)) || [],\n                  datasets: [{\n                    label: 'Error Rate (%)',\n                    data: (metrics === null || metrics === void 0 ? void 0 : (_metrics$errorRates2 = metrics.errorRates) === null || _metrics$errorRates2 === void 0 ? void 0 : _metrics$errorRates2.map(m => m.value)) || [],\n                    borderColor: 'rgb(255, 99, 132)'\n                  }]\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 32,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 9\n  }, this);\n};\n_c = APMDashboard;\nexport default APMDashboard;\nvar _c;\n$RefreshReg$(_c, \"APMDashboard\");","map":{"version":3,"names":["React","Card","CardContent","Typography","Grid","Box","Line","jsxDEV","_jsxDEV","APMDashboard","metrics","_metrics$responseTime","_metrics$responseTime2","_metrics$errorRates","_metrics$errorRates2","children","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","container","spacing","item","xs","md","data","labels","responseTimes","map","m","timestamp","datasets","label","value","borderColor","errorRates","_c","$RefreshReg$"],"sources":["/Users/pradeepn/monitoringservice/aws-monitor/frontend/src/Components/APMDashboard.jsx"],"sourcesContent":["import React from 'react';\nimport { Card, CardContent, Typography, Grid, Box } from '@mui/material';\nimport { Line } from 'react-chartjs-2';\n\nconst APMDashboard = ({ metrics }) => {\n    return (\n        <Card>\n            <CardContent>\n                <Typography variant=\"h6\" gutterBottom>Application Performance</Typography>\n                <Grid container spacing={3}>\n                    <Grid item xs={12} md={6}>\n                        <Card>\n                            <CardContent>\n                                <Typography variant=\"subtitle1\">Response Time</Typography>\n                                <Line\n                                    data={{\n                                        labels: metrics?.responseTimes?.map(m => m.timestamp) || [],\n                                        datasets: [{\n                                            label: 'Avg Response Time (ms)',\n                                            data: metrics?.responseTimes?.map(m => m.value) || [],\n                                            borderColor: 'rgb(75, 192, 192)',\n                                        }]\n                                    }}\n                                />\n                            </CardContent>\n                        </Card>\n                    </Grid>\n                    <Grid item xs={12} md={6}>\n                        <Card>\n                            <CardContent>\n                                <Typography variant=\"subtitle1\">Error Rate</Typography>\n                                <Line\n                                    data={{\n                                        labels: metrics?.errorRates?.map(m => m.timestamp) || [],\n                                        datasets: [{\n                                            label: 'Error Rate (%)',\n                                            data: metrics?.errorRates?.map(m => m.value) || [],\n                                            borderColor: 'rgb(255, 99, 132)',\n                                        }]\n                                    }}\n                                />\n                            </CardContent>\n                        </Card>\n                    </Grid>\n                </Grid>\n            </CardContent>\n        </Card>\n    );\n};\n\nexport default APMDashboard; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"/Users/pradeepn/monitoringservice/aws-monitor/frontend/src/Components/RUMDashboard.jsx\";\nimport React from 'react';\nimport { Card, CardContent, Typography, Grid, Box } from '@mui/material';\nimport { Line, Pie } from 'react-chartjs-2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RUMDashboard = ({\n  metrics\n}) => {\n  var _metrics$pageLoads, _metrics$pageLoads2, _metrics$sessions, _metrics$sessions2, _metrics$browsers, _metrics$browsers2;\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: /*#__PURE__*/_jsxDEV(CardContent, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        gutterBottom: true,\n        children: \"Real User Monitoring\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 3,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 4,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            children: /*#__PURE__*/_jsxDEV(CardContent, {\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"subtitle1\",\n                children: \"Page Load Time\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 14,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Line, {\n                data: {\n                  labels: (metrics === null || metrics === void 0 ? void 0 : (_metrics$pageLoads = metrics.pageLoads) === null || _metrics$pageLoads === void 0 ? void 0 : _metrics$pageLoads.map(m => m.timestamp)) || [],\n                  datasets: [{\n                    label: 'Load Time (s)',\n                    data: (metrics === null || metrics === void 0 ? void 0 : (_metrics$pageLoads2 = metrics.pageLoads) === null || _metrics$pageLoads2 === void 0 ? void 0 : _metrics$pageLoads2.map(m => m.value)) || [],\n                    borderColor: 'rgb(53, 162, 235)'\n                  }]\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 15,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 13,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 12,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 4,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            children: /*#__PURE__*/_jsxDEV(CardContent, {\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"subtitle1\",\n                children: \"User Sessions\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 31,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Line, {\n                data: {\n                  labels: (metrics === null || metrics === void 0 ? void 0 : (_metrics$sessions = metrics.sessions) === null || _metrics$sessions === void 0 ? void 0 : _metrics$sessions.map(m => m.timestamp)) || [],\n                  datasets: [{\n                    label: 'Active Sessions',\n                    data: (metrics === null || metrics === void 0 ? void 0 : (_metrics$sessions2 = metrics.sessions) === null || _metrics$sessions2 === void 0 ? void 0 : _metrics$sessions2.map(m => m.value)) || [],\n                    borderColor: 'rgb(75, 192, 192)'\n                  }]\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 32,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 4,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            children: /*#__PURE__*/_jsxDEV(CardContent, {\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"subtitle1\",\n                children: \"Browser Distribution\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 48,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Pie, {\n                data: {\n                  labels: (metrics === null || metrics === void 0 ? void 0 : (_metrics$browsers = metrics.browsers) === null || _metrics$browsers === void 0 ? void 0 : _metrics$browsers.map(b => b.name)) || [],\n                  datasets: [{\n                    data: (metrics === null || metrics === void 0 ? void 0 : (_metrics$browsers2 = metrics.browsers) === null || _metrics$browsers2 === void 0 ? void 0 : _metrics$browsers2.map(b => b.count)) || [],\n                    backgroundColor: ['rgb(255, 99, 132)', 'rgb(54, 162, 235)', 'rgb(255, 205, 86)']\n                  }]\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 49,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 9\n  }, this);\n};\n_c = RUMDashboard;\nexport default RUMDashboard;\nvar _c;\n$RefreshReg$(_c, \"RUMDashboard\");","map":{"version":3,"names":["React","Card","CardContent","Typography","Grid","Box","Line","Pie","jsxDEV","_jsxDEV","RUMDashboard","metrics","_metrics$pageLoads","_metrics$pageLoads2","_metrics$sessions","_metrics$sessions2","_metrics$browsers","_metrics$browsers2","children","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","container","spacing","item","xs","md","data","labels","pageLoads","map","m","timestamp","datasets","label","value","borderColor","sessions","browsers","b","name","count","backgroundColor","_c","$RefreshReg$"],"sources":["/Users/pradeepn/monitoringservice/aws-monitor/frontend/src/Components/RUMDashboard.jsx"],"sourcesContent":["import React from 'react';\nimport { Card, CardContent, Typography, Grid, Box } from '@mui/material';\nimport { Line, Pie } from 'react-chartjs-2';\n\nconst RUMDashboard = ({ metrics }) => {\n    return (\n        <Card>\n            <CardContent>\n                <Typography variant=\"h6\" gutterBottom>Real User Monitoring</Typography>\n                <Grid container spacing={3}>\n                    <Grid item xs={12} md={4}>\n                        <Card>\n                            <CardContent>\n                                <Typography variant=\"subtitle1\">Page Load Time</Typography>\n                                <Line\n                                    data={{\n                                        labels: metrics?.pageLoads?.map(m => m.timestamp) || [],\n                                        datasets: [{\n                                            label: 'Load Time (s)',\n                                            data: metrics?.pageLoads?.map(m => m.value) || [],\n                                            borderColor: 'rgb(53, 162, 235)',\n                                        }]\n                                    }}\n                                />\n                            </CardContent>\n                        </Card>\n                    </Grid>\n                    <Grid item xs={12} md={4}>\n                        <Card>\n                            <CardContent>\n                                <Typography variant=\"subtitle1\">User Sessions</Typography>\n                                <Line\n                                    data={{\n                                        labels: metrics?.sessions?.map(m => m.timestamp) || [],\n                                        datasets: [{\n                                            label: 'Active Sessions',\n                                            data: metrics?.sessions?.map(m => m.value) || [],\n                                            borderColor: 'rgb(75, 192, 192)',\n                                        }]\n                                    }}\n                                />\n                            </CardContent>\n                        </Card>\n                    </Grid>\n                    <Grid item xs={12} md={4}>\n                        <Card>\n                            <CardContent>\n                                <Typography variant=\"subtitle1\">Browser Distribution</Typography>\n                                <Pie\n                                    data={{\n                                        labels: metrics?.browsers?.map(b => b.name) || [],\n                                        datasets: [{\n                                            data: metrics?.browsers?.map(b => b.count) || [],\n                                            backgroundColor: [\n                                                'rgb(255, 99, 132)',\n                                                'rgb(54, 162, 235)',\n                                                'rgb(255, 205, 86)'\n                                            ],\n                                        }]\n                                    }}\n                                />\n                            </CardContent>\n                        </Card>\n                    </Grid>\n                </Grid>\n            </CardContent>\n        </Card>\n    );\n};\n\nexport default RUMDashboard; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
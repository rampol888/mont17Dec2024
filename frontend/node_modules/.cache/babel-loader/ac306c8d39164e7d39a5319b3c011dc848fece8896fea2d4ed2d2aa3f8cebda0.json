{"ast":null,"code":"var _jsxFileName = \"/Users/pradeepn/monitoringservice/aws-monitor/frontend/src/Components/ServerMonitoring.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { Card, CardContent, Typography, Grid, Box, CircularProgress, LinearProgress, useTheme } from '@mui/material';\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend } from 'chart.js';\nimport { Line } from 'react-chartjs-2';\nimport MemoryIcon from '@mui/icons-material/Memory';\nimport StorageIcon from '@mui/icons-material/Storage';\nimport NetworkCheckIcon from '@mui/icons-material/NetworkCheck';\nimport SpeedIcon from '@mui/icons-material/Speed';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend);\nconst ServerMonitoring = ({\n  metrics\n}) => {\n  _s();\n  const theme = useTheme();\n  if (!metrics) {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      justifyContent: \"center\",\n      p: 3,\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this);\n  }\n  const chartOptions = {\n    responsive: true,\n    plugins: {\n      legend: {\n        position: 'top'\n      }\n    },\n    scales: {\n      y: {\n        beginAtZero: true,\n        max: 100\n      }\n    }\n  };\n  const getStatusColor = value => {\n    if (value >= 90) return theme.palette.error.main;\n    if (value >= 70) return theme.palette.warning.main;\n    return theme.palette.success.main;\n  };\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: /*#__PURE__*/_jsxDEV(CardContent, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        gutterBottom: true,\n        children: \"Server Monitoring\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 3,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 6,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            variant: \"outlined\",\n            children: /*#__PURE__*/_jsxDEV(CardContent, {\n              children: [/*#__PURE__*/_jsxDEV(Box, {\n                display: \"flex\",\n                alignItems: \"center\",\n                mb: 2,\n                children: [/*#__PURE__*/_jsxDEV(SpeedIcon, {\n                  color: \"primary\",\n                  sx: {\n                    mr: 1\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 83,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"h6\",\n                  children: \"CPU Usage\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 84,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                mb: 2,\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"h4\",\n                  color: getStatusColor(metrics.cpu.current),\n                  children: [Math.round(metrics.cpu.current), \"%\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 87,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(LinearProgress, {\n                  variant: \"determinate\",\n                  value: metrics.cpu.current,\n                  sx: {\n                    mt: 1,\n                    height: 10,\n                    borderRadius: 5,\n                    backgroundColor: theme.palette.grey[200],\n                    '& .MuiLinearProgress-bar': {\n                      backgroundColor: getStatusColor(metrics.cpu.current)\n                    }\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 90,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Line, {\n                options: chartOptions,\n                data: {\n                  labels: metrics.cpu.history.map(point => new Date(point.timestamp).toLocaleTimeString()),\n                  datasets: [{\n                    label: 'CPU Usage',\n                    data: metrics.cpu.history.map(point => point.value),\n                    borderColor: theme.palette.primary.main,\n                    tension: 0.1\n                  }]\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 104,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 6,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            variant: \"outlined\",\n            children: /*#__PURE__*/_jsxDEV(CardContent, {\n              children: [/*#__PURE__*/_jsxDEV(Box, {\n                display: \"flex\",\n                alignItems: \"center\",\n                mb: 2,\n                children: [/*#__PURE__*/_jsxDEV(MemoryIcon, {\n                  color: \"primary\",\n                  sx: {\n                    mr: 1\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 127,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"h6\",\n                  children: \"Memory Usage\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 128,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 126,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                mb: 2,\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"h4\",\n                  color: getStatusColor(metrics.memory.current),\n                  children: [Math.round(metrics.memory.current), \"%\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 131,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(LinearProgress, {\n                  variant: \"determinate\",\n                  value: metrics.memory.current,\n                  sx: {\n                    mt: 1,\n                    height: 10,\n                    borderRadius: 5,\n                    backgroundColor: theme.palette.grey[200],\n                    '& .MuiLinearProgress-bar': {\n                      backgroundColor: getStatusColor(metrics.memory.current)\n                    }\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 134,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 130,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Line, {\n                options: chartOptions,\n                data: {\n                  labels: metrics.memory.history.map(point => new Date(point.timestamp).toLocaleTimeString()),\n                  datasets: [{\n                    label: 'Memory Usage',\n                    data: metrics.memory.history.map(point => point.value),\n                    borderColor: theme.palette.secondary.main,\n                    tension: 0.1\n                  }]\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 148,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 6,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            variant: \"outlined\",\n            children: /*#__PURE__*/_jsxDEV(CardContent, {\n              children: [/*#__PURE__*/_jsxDEV(Box, {\n                display: \"flex\",\n                alignItems: \"center\",\n                mb: 2,\n                children: [/*#__PURE__*/_jsxDEV(StorageIcon, {\n                  color: \"primary\",\n                  sx: {\n                    mr: 1\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 171,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"h6\",\n                  children: \"Disk Usage\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 172,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 170,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                mb: 2,\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"h4\",\n                  color: getStatusColor(metrics.disk.current),\n                  children: [Math.round(metrics.disk.current), \"%\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 175,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(LinearProgress, {\n                  variant: \"determinate\",\n                  value: metrics.disk.current,\n                  sx: {\n                    mt: 1,\n                    height: 10,\n                    borderRadius: 5,\n                    backgroundColor: theme.palette.grey[200],\n                    '& .MuiLinearProgress-bar': {\n                      backgroundColor: getStatusColor(metrics.disk.current)\n                    }\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 178,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 174,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Line, {\n                options: chartOptions,\n                data: {\n                  labels: metrics.disk.history.map(point => new Date(point.timestamp).toLocaleTimeString()),\n                  datasets: [{\n                    label: 'Disk Usage',\n                    data: metrics.disk.history.map(point => point.value),\n                    borderColor: theme.palette.warning.main,\n                    tension: 0.1\n                  }]\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 192,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 6,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            variant: \"outlined\",\n            children: /*#__PURE__*/_jsxDEV(CardContent, {\n              children: [/*#__PURE__*/_jsxDEV(Box, {\n                display: \"flex\",\n                alignItems: \"center\",\n                mb: 2,\n                children: [/*#__PURE__*/_jsxDEV(NetworkCheckIcon, {\n                  color: \"primary\",\n                  sx: {\n                    mr: 1\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 215,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"h6\",\n                  children: \"Network Traffic\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 216,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 214,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Line, {\n                options: {\n                  ...chartOptions,\n                  scales: {\n                    y: {\n                      beginAtZero: true,\n                      ticks: {\n                        callback: value => `${value} MB/s`\n                      }\n                    }\n                  }\n                },\n                data: {\n                  labels: metrics.network.in.map(point => new Date(point.timestamp).toLocaleTimeString()),\n                  datasets: [{\n                    label: 'Network In',\n                    data: metrics.network.in.map(point => point.value / (1024 * 1024)),\n                    borderColor: theme.palette.success.main,\n                    tension: 0.1\n                  }, {\n                    label: 'Network Out',\n                    data: metrics.network.out.map(point => point.value / (1024 * 1024)),\n                    borderColor: theme.palette.error.main,\n                    tension: 0.1\n                  }]\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 218,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 9\n  }, this);\n};\n_s(ServerMonitoring, \"VrMvFCCB9Haniz3VCRPNUiCauHs=\", false, function () {\n  return [useTheme];\n});\n_c = ServerMonitoring;\nexport default ServerMonitoring;\nvar _c;\n$RefreshReg$(_c, \"ServerMonitoring\");","map":{"version":3,"names":["React","Card","CardContent","Typography","Grid","Box","CircularProgress","LinearProgress","useTheme","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","Line","MemoryIcon","StorageIcon","NetworkCheckIcon","SpeedIcon","jsxDEV","_jsxDEV","register","ServerMonitoring","metrics","_s","theme","display","justifyContent","p","children","fileName","_jsxFileName","lineNumber","columnNumber","chartOptions","responsive","plugins","legend","position","scales","y","beginAtZero","max","getStatusColor","value","palette","error","main","warning","success","variant","gutterBottom","container","spacing","item","xs","md","alignItems","mb","color","sx","mr","cpu","current","Math","round","mt","height","borderRadius","backgroundColor","grey","options","data","labels","history","map","point","Date","timestamp","toLocaleTimeString","datasets","label","borderColor","primary","tension","memory","secondary","disk","ticks","callback","network","in","out","_c","$RefreshReg$"],"sources":["/Users/pradeepn/monitoringservice/aws-monitor/frontend/src/Components/ServerMonitoring.jsx"],"sourcesContent":["import React from 'react';\nimport {\n    Card,\n    CardContent,\n    Typography,\n    Grid,\n    Box,\n    CircularProgress,\n    LinearProgress,\n    useTheme\n} from '@mui/material';\nimport {\n    Chart as ChartJS,\n    CategoryScale,\n    LinearScale,\n    PointElement,\n    LineElement,\n    Title,\n    Tooltip,\n    Legend\n} from 'chart.js';\nimport { Line } from 'react-chartjs-2';\nimport MemoryIcon from '@mui/icons-material/Memory';\nimport StorageIcon from '@mui/icons-material/Storage';\nimport NetworkCheckIcon from '@mui/icons-material/NetworkCheck';\nimport SpeedIcon from '@mui/icons-material/Speed';\n\nChartJS.register(\n    CategoryScale,\n    LinearScale,\n    PointElement,\n    LineElement,\n    Title,\n    Tooltip,\n    Legend\n);\n\nconst ServerMonitoring = ({ metrics }) => {\n    const theme = useTheme();\n\n    if (!metrics) {\n        return (\n            <Box display=\"flex\" justifyContent=\"center\" p={3}>\n                <CircularProgress />\n            </Box>\n        );\n    }\n\n    const chartOptions = {\n        responsive: true,\n        plugins: {\n            legend: {\n                position: 'top',\n            }\n        },\n        scales: {\n            y: {\n                beginAtZero: true,\n                max: 100\n            }\n        }\n    };\n\n    const getStatusColor = (value) => {\n        if (value >= 90) return theme.palette.error.main;\n        if (value >= 70) return theme.palette.warning.main;\n        return theme.palette.success.main;\n    };\n\n    return (\n        <Card>\n            <CardContent>\n                <Typography variant=\"h6\" gutterBottom>\n                    Server Monitoring\n                </Typography>\n\n                <Grid container spacing={3}>\n                    {/* CPU Usage */}\n                    <Grid item xs={12} md={6}>\n                        <Card variant=\"outlined\">\n                            <CardContent>\n                                <Box display=\"flex\" alignItems=\"center\" mb={2}>\n                                    <SpeedIcon color=\"primary\" sx={{ mr: 1 }} />\n                                    <Typography variant=\"h6\">CPU Usage</Typography>\n                                </Box>\n                                <Box mb={2}>\n                                    <Typography variant=\"h4\" color={getStatusColor(metrics.cpu.current)}>\n                                        {Math.round(metrics.cpu.current)}%\n                                    </Typography>\n                                    <LinearProgress \n                                        variant=\"determinate\" \n                                        value={metrics.cpu.current}\n                                        sx={{ \n                                            mt: 1, \n                                            height: 10, \n                                            borderRadius: 5,\n                                            backgroundColor: theme.palette.grey[200],\n                                            '& .MuiLinearProgress-bar': {\n                                                backgroundColor: getStatusColor(metrics.cpu.current)\n                                            }\n                                        }}\n                                    />\n                                </Box>\n                                <Line \n                                    options={chartOptions} \n                                    data={{\n                                        labels: metrics.cpu.history.map(point => \n                                            new Date(point.timestamp).toLocaleTimeString()\n                                        ),\n                                        datasets: [{\n                                            label: 'CPU Usage',\n                                            data: metrics.cpu.history.map(point => point.value),\n                                            borderColor: theme.palette.primary.main,\n                                            tension: 0.1\n                                        }]\n                                    }} \n                                />\n                            </CardContent>\n                        </Card>\n                    </Grid>\n\n                    {/* Memory Usage */}\n                    <Grid item xs={12} md={6}>\n                        <Card variant=\"outlined\">\n                            <CardContent>\n                                <Box display=\"flex\" alignItems=\"center\" mb={2}>\n                                    <MemoryIcon color=\"primary\" sx={{ mr: 1 }} />\n                                    <Typography variant=\"h6\">Memory Usage</Typography>\n                                </Box>\n                                <Box mb={2}>\n                                    <Typography variant=\"h4\" color={getStatusColor(metrics.memory.current)}>\n                                        {Math.round(metrics.memory.current)}%\n                                    </Typography>\n                                    <LinearProgress \n                                        variant=\"determinate\" \n                                        value={metrics.memory.current}\n                                        sx={{ \n                                            mt: 1, \n                                            height: 10, \n                                            borderRadius: 5,\n                                            backgroundColor: theme.palette.grey[200],\n                                            '& .MuiLinearProgress-bar': {\n                                                backgroundColor: getStatusColor(metrics.memory.current)\n                                            }\n                                        }}\n                                    />\n                                </Box>\n                                <Line \n                                    options={chartOptions} \n                                    data={{\n                                        labels: metrics.memory.history.map(point => \n                                            new Date(point.timestamp).toLocaleTimeString()\n                                        ),\n                                        datasets: [{\n                                            label: 'Memory Usage',\n                                            data: metrics.memory.history.map(point => point.value),\n                                            borderColor: theme.palette.secondary.main,\n                                            tension: 0.1\n                                        }]\n                                    }} \n                                />\n                            </CardContent>\n                        </Card>\n                    </Grid>\n\n                    {/* Disk Usage */}\n                    <Grid item xs={12} md={6}>\n                        <Card variant=\"outlined\">\n                            <CardContent>\n                                <Box display=\"flex\" alignItems=\"center\" mb={2}>\n                                    <StorageIcon color=\"primary\" sx={{ mr: 1 }} />\n                                    <Typography variant=\"h6\">Disk Usage</Typography>\n                                </Box>\n                                <Box mb={2}>\n                                    <Typography variant=\"h4\" color={getStatusColor(metrics.disk.current)}>\n                                        {Math.round(metrics.disk.current)}%\n                                    </Typography>\n                                    <LinearProgress \n                                        variant=\"determinate\" \n                                        value={metrics.disk.current}\n                                        sx={{ \n                                            mt: 1, \n                                            height: 10, \n                                            borderRadius: 5,\n                                            backgroundColor: theme.palette.grey[200],\n                                            '& .MuiLinearProgress-bar': {\n                                                backgroundColor: getStatusColor(metrics.disk.current)\n                                            }\n                                        }}\n                                    />\n                                </Box>\n                                <Line \n                                    options={chartOptions} \n                                    data={{\n                                        labels: metrics.disk.history.map(point => \n                                            new Date(point.timestamp).toLocaleTimeString()\n                                        ),\n                                        datasets: [{\n                                            label: 'Disk Usage',\n                                            data: metrics.disk.history.map(point => point.value),\n                                            borderColor: theme.palette.warning.main,\n                                            tension: 0.1\n                                        }]\n                                    }} \n                                />\n                            </CardContent>\n                        </Card>\n                    </Grid>\n\n                    {/* Network Traffic */}\n                    <Grid item xs={12} md={6}>\n                        <Card variant=\"outlined\">\n                            <CardContent>\n                                <Box display=\"flex\" alignItems=\"center\" mb={2}>\n                                    <NetworkCheckIcon color=\"primary\" sx={{ mr: 1 }} />\n                                    <Typography variant=\"h6\">Network Traffic</Typography>\n                                </Box>\n                                <Line \n                                    options={{\n                                        ...chartOptions,\n                                        scales: {\n                                            y: {\n                                                beginAtZero: true,\n                                                ticks: {\n                                                    callback: (value) => `${value} MB/s`\n                                                }\n                                            }\n                                        }\n                                    }} \n                                    data={{\n                                        labels: metrics.network.in.map(point => \n                                            new Date(point.timestamp).toLocaleTimeString()\n                                        ),\n                                        datasets: [\n                                            {\n                                                label: 'Network In',\n                                                data: metrics.network.in.map(point => point.value / (1024 * 1024)),\n                                                borderColor: theme.palette.success.main,\n                                                tension: 0.1\n                                            },\n                                            {\n                                                label: 'Network Out',\n                                                data: metrics.network.out.map(point => point.value / (1024 * 1024)),\n                                                borderColor: theme.palette.error.main,\n                                                tension: 0.1\n                                            }\n                                        ]\n                                    }} \n                                />\n                            </CardContent>\n                        </Card>\n                    </Grid>\n                </Grid>\n            </CardContent>\n        </Card>\n    );\n};\n\nexport default ServerMonitoring; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}